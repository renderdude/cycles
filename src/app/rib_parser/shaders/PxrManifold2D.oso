OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -DOSX -I/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include -I/data/build/ratbuild/rmanshare/RIS/include -I/data/build/ratbuild/rmanshare/RIS/include/common -I/data/build/ratbuild/rmanshare/RIS/pattern/osl -I/data/build/ratbuild/rmanshare/RIS/include/osl -o /data/build/ratbuild/rmanshare/_built/osxMojave_x86-64_clang10_external_release/osl/PxrManifold2D.osl/obj/PxrManifold2D.oso
shader PxrManifold2D	%meta{int,rfm_nodeid,1053422} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/manifold"} %meta{string,rfh_classification,"Pattern/Manifold"} %meta{string,help,"An OSL manifold for 2D coordinates."} 
param	int	enableTransforms	1		%meta{string,page,"Transform"} %meta{int,page_open,1} %meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,help,"If off, all transform parameters are ignored"}  %read{44,44} %write{2147483647,-1}
param	vector	center	0 0 0		%meta{string,page,"Transform"} %meta{int,connectable,0} %meta{string,label,"Center"} %meta{string,help,"Transformations are centered here"}  %read{55,82} %write{2147483647,-1} %derivs
param	float	angle	0		%meta{string,page,"Transform"} %meta{float,min,-360} %meta{float,max,360} %meta{string,label,"Angle"} %meta{string,help,"Rotation angle around origin"} %meta{string,slider,"True"} %meta{float,slidermin,-180} %meta{float,slidermax,180}  %read{62,67} %write{2147483647,-1} %derivs
param	float	scaleS	1		%meta{string,page,"Transform"} %meta{string,label,"Frequency S"} %meta{string,help,"Frequency of feature in S"} %meta{string,slider,"True"} %meta{float,slidermin,0} %meta{float,slidermax,10}  %read{57,57} %write{2147483647,-1} %derivs
param	float	scaleT	1		%meta{string,page,"Transform"} %meta{string,label,"Frequency T"} %meta{string,help,"Frequency of feature in T"} %meta{string,slider,"True"} %meta{float,slidermin,0} %meta{float,slidermax,10}  %read{57,57} %write{2147483647,-1} %derivs
param	float	offsetS	0		%meta{string,page,"Transform"} %meta{string,label,"Offset S"} %meta{string,help,"Offset from origin in S"} %meta{string,slider,"True"} %meta{float,slidermin,-1} %meta{float,slidermax,1}  %read{59,59} %write{2147483647,-1} %derivs
param	float	offsetT	0		%meta{string,page,"Transform"} %meta{string,label,"Offset T"} %meta{string,help,"Offset from origin in T"} %meta{string,slider,"True"} %meta{float,slidermin,-1} %meta{float,slidermax,1}  %read{59,59} %write{2147483647,-1} %derivs
param	int	invertS	0		%meta{string,page,"Transform"} %meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,label,"Invert S"} %meta{string,help,"Flip along S"}  %read{17,17} %write{2147483647,-1}
param	int	invertT	1		%meta{string,page,"Transform"} %meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,label,"Invert T"} %meta{string,help,"Flip along T"}  %read{45,45} %write{2147483647,-1}
param	float	warp	0		%meta{string,widget,"default"} %meta{string,label,"Warp"} %meta{string,help,"Connect a noise or texture to warp the domain."}  %read{128,130} %write{2147483647,-1} %derivs
param	float	warpAmount	1		%meta{string,widget,"default"} %meta{int,slider,1} %meta{float,slidermin,0} %meta{float,slidermax,1} %meta{string,label,"Warp Amount"} %meta{string,help,"Connect a noise or texture to warp the domain."}  %read{132,132} %write{2147483647,-1} %derivs
param	int	calcRadius	0		%meta{string,page,"Advanced"} %meta{string,widget,"checkBox"} %meta{int,connectable,0} %meta{string,help,"Calculate radius the hard way from derivatives to get around renderer bug in the radius calculation."}  %read{2147483647,-1} %write{2147483647,-1}
param	int	enableJacobianFilter	0		%meta{string,page,"Advanced"} %meta{int,connectable,0} %meta{string,widget,"checkBox"} %meta{string,help,"Enables calculating a filter radiusbased on the Jacobian in screen space. This should create a filter that is less dependend on the parameterization of the geometry."}  %read{88,88} %write{2147483647,-1}
param	float	jacobianRadiusMult	1		%meta{string,page,"Advanced"} %meta{int,connectable,0} %meta{string,help,"Multiplies the radius calculated based on the Jacobian in screen space."}  %read{122,122} %write{2147483647,-1}
param	int	__rfk_inDisplacement	0		%meta{string,page,"Advanced"} %meta{string,widget,"null"} %meta{int,connectable,0} %meta{string,help,"Rfk sets this to 1 in displacements. Leave as 0."}  %read{86,86} %write{2147483647,-1}
param	string	name_uvSet	""		%meta{string,page,""} %meta{string,widget,"default"} %meta{string,label,"uvSet"} %meta{int,connectable,0} %meta{string,help,"Default is st"} %meta{string,widget,"uvChannelInput"}  %read{23,35} %write{2147483647,-1} %derivs
param	vector	default_uvSet	0 0 0		%meta{string,page,""} %meta{int,connectable,0} %meta{string,widget,"null"}  %read{2147483647,-1} %write{2147483647,-1}
param	float	s	0		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,connectable,0}  %read{0,0} %write{2147483647,-1} %derivs
param	float	t	0		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,connectable,0}  %read{1,1} %write{2147483647,-1} %derivs
param	string	primvarS	""		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,connectable,0}  %read{2,14} %write{2147483647,-1} %derivs
param	string	primvarT	""		%meta{int,lockgeom,0} %meta{string,widget,"null"} %meta{int,connectable,0}  %read{5,10} %write{2147483647,-1} %derivs
oparam	struct Manifold	result			%read{2147483647,-1} %write{2147483647,-1} %struct{"Manifold"} %structfields{Q,QN,Qradius} %structfieldtypes{"pnf"} %structnfields{3}
oparam	point	result.Q	0 0 0		%read{40,136} %write{39,134} %mystruct{result} %mystructfield{0} %derivs
oparam	normal	result.QN	0 0 1		%read{2147483647,-1} %write{43,43} %mystruct{result} %mystructfield{1}
oparam	float	result.Qradius	0		%read{123,127} %write{42,124} %mystruct{result} %mystructfield{2}
oparam	float	resultS	0		%read{2147483647,-1} %write{125,135}
oparam	float	resultT	0		%read{2147483647,-1} %write{126,136}
oparam	float	resultRadius	0		%read{2147483647,-1} %write{127,127}
global	point	P	%read{91,91} %write{2147483647,-1} %derivs
local	point	___405_Pr	%read{92,93} %write{91,91} %derivs
local	float	___405_x	%read{94,95} %write{92,92} %derivs
local	float	___405_y	%read{96,97} %write{93,93} %derivs
local	float	___405_dxdu	%read{98,110} %write{94,94}
local	float	___405_dxdv	%read{99,106} %write{95,95}
local	float	___405_dydu	%read{99,108} %write{96,96}
local	float	___405_dydv	%read{98,105} %write{97,97}
local	float	___405_det	%read{102,104} %write{100,100}
local	float	___405_detinv	%read{105,110} %write{101,104}
local	float	___405_dudx	%read{113,113} %write{105,105}
local	float	___405_dudy	%read{116,116} %write{107,107}
local	float	___405_dvdx	%read{114,114} %write{109,109}
local	float	___405_dvdy	%read{117,117} %write{110,110}
local	vector	___405_dQdu	%read{113,116} %write{111,111}
local	vector	___405_dQdv	%read{114,117} %write{112,112}
local	vector	___405_dQdx	%read{119,119} %write{115,115}
local	vector	___405_dQdy	%read{119,119} %write{118,118}
local	float[2]	___407_inUvSet	%read{37,38} %write{31,35} %derivs
local	int	___407_readUvSetSuccessfully	%read{36,84} %write{22,35}
local	float	___414_cosAng	%read{70,77} %write{68,68} %derivs
local	float	___414_sinAng	%read{72,75} %write{68,68} %derivs
local	point	___414_Q	%read{69,79} %write{64,64} %derivs
local	float	ss	%read{19,20} %write{0,15} %derivs
local	float	tt	%read{32,32} %write{1,16} %derivs
local	float[2]	___424_val	%read{15,16} %write{13,14} %derivs
const	string	$const1	""		%read{2,23} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{4,8} %write{3,7}
const	int	$const2	0		%read{3,135} %write{2147483647,-1}
temp	int	$tmp3	%read{6,6} %write{5,5}
temp	int	$tmp4	%read{7,7} %write{6,6}
temp	int	$tmp5	%read{2147483647,-1} %write{9,9}
const	string	$const3	"primvar"		%read{9,35} %write{2147483647,-1}
temp	int	$tmp6	%read{2147483647,-1} %write{10,10}
temp	int	$tmp7	%read{12,12} %write{11,11}
const	float[2]	$const4	0 0 		%read{13,13} %write{2147483647,-1}
temp	int	$tmp8	%read{2147483647,-1} %write{14,14}
const	int	$const5	1		%read{16,136} %write{2147483647,-1}
temp	float	$tmp9	%read{31,31} %write{19,20} %derivs
temp	int	$tmp10	%read{18,18} %write{17,17}
const	float	$const6	1		%read{19,131} %write{2147483647,-1}
const	string	$const7	"makeStManifold"		%read{21,21} %write{2147483647,-1}
temp	int	$tmp11	%read{24,24} %write{23,23}
temp	int	$tmp12	%read{25,29} %write{24,28}
const	string	$const8	"st"		%read{26,26} %write{2147483647,-1}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	int	$tmp14	%read{28,28} %write{27,27}
const	float	$const9	0		%read{33,124} %write{2147483647,-1}
temp	float	$tmp15	%read{39,39} %write{37,37} %derivs
temp	float	$tmp16	%read{39,39} %write{38,38} %derivs
const	point	$const10	0 0 0		%read{41,41} %write{2147483647,-1}
const	vector	$const11	0 0 1		%read{43,43} %write{2147483647,-1}
temp	float	$tmp17	%read{48,48} %write{47,47} %derivs
temp	float	$tmp18	%read{47,47} %write{46,46} %derivs
temp	float	$tmp19	%read{53,53} %write{48,48} %derivs
temp	float	$tmp20	%read{52,52} %write{49,49} %derivs
temp	float	$tmp21	%read{52,52} %write{51,51} %derivs
temp	float	$tmp22	%read{51,51} %write{50,50} %derivs
temp	float	$tmp23	%read{53,53} %write{52,52} %derivs
temp	float	$tmp24	%read{54,54} %write{53,53} %derivs
temp	vector	$tmp25	%read{58,58} %write{57,57} %derivs
temp	vector	$tmp26	%read{60,60} %write{58,58} %derivs
temp	point	$tmp27	%read{60,60} %write{59,59} %derivs
temp	int	$tmp28	%read{63,63} %write{62,62}
temp	float	$tmp29	%read{68,68} %write{67,67} %derivs
const	string	$const12	"radians"		%read{65,65} %write{2147483647,-1}
const	float	$const13	3.14159274		%read{66,66} %write{2147483647,-1}
const	float	$const14	180		%read{66,66} %write{2147483647,-1}
temp	float	$tmp30	%read{67,67} %write{66,66} %derivs
temp	float	$tmp31	%read{70,70} %write{69,69} %derivs
temp	float	$tmp32	%read{73,73} %write{70,70} %derivs
temp	float	$tmp33	%read{72,72} %write{71,71} %derivs
temp	float	$tmp34	%read{73,73} %write{72,72} %derivs
temp	float	$tmp35	%read{80,80} %write{73,73} %derivs
temp	float	$tmp36	%read{75,75} %write{74,74} %derivs
temp	float	$tmp37	%read{78,78} %write{75,75} %derivs
temp	float	$tmp38	%read{77,77} %write{76,76} %derivs
temp	float	$tmp39	%read{78,78} %write{77,77} %derivs
temp	float	$tmp40	%read{80,80} %write{78,78} %derivs
const	int	$const15	2		%read{79,79} %write{2147483647,-1}
temp	float	$tmp41	%read{80,80} %write{79,79} %derivs
const	string	$const16	"Manifold_CalcRadius"		%read{85,85} %write{2147483647,-1}
temp	int	$tmp42	%read{89,89} %write{88,88}
const	string	$const17	"raster"		%read{91,91} %write{2147483647,-1}
const	string	$const18	"transform"		%read{90,90} %write{2147483647,-1}
const	string	$const19	"common"		%read{91,91} %write{2147483647,-1}
temp	float	$tmp43	%read{100,100} %write{98,98}
temp	float	$tmp44	%read{100,100} %write{99,99}
temp	int	$tmp45	%read{103,103} %write{102,102}
temp	float	$tmp46	%read{107,107} %write{106,106}
temp	float	$tmp47	%read{109,109} %write{108,108}
temp	vector	$tmp48	%read{115,115} %write{113,113}
temp	vector	$tmp49	%read{115,115} %write{114,114}
temp	vector	$tmp50	%read{118,118} %write{116,116}
temp	vector	$tmp51	%read{118,118} %write{117,117}
temp	float	$tmp52	%read{122,122} %write{121,121}
temp	float	$tmp53	%read{121,121} %write{120,120}
temp	vector	$tmp54	%read{120,120} %write{119,119}
temp	int	$tmp55	%read{129,129} %write{128,128}
const	float	$const20	2		%read{130,130} %write{2147483647,-1}
temp	float	$tmp56	%read{131,131} %write{130,130} %derivs
temp	float	$tmp57	%read{132,132} %write{131,131} %derivs
temp	float	$tmp58	%read{133,133} %write{132,132} %derivs
code ___main___
# PxrManifold2D.osl:173
#     float ss = s, tt = t;
	assign		ss s 	%filename{"PxrManifold2D.osl"} %line{173} %argrw{"wr"}
	assign		tt t 	%argrw{"wr"}
# PxrManifold2D.osl:174
#     if (primvarS != "" && primvarT != "")
	neq		$tmp1 primvarS $const1 	%line{174} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
	neq		$tmp3 primvarT $const1 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 11 17 	%argrw{"r"}
# PxrManifold2D.osl:176
#         getattribute("primvar", primvarS, ss);
	getattribute	$tmp5 $const3 primvarS ss 	%line{176} %argrw{"wrrw"}
# PxrManifold2D.osl:177
#         getattribute("primvar", primvarT, tt);
	getattribute	$tmp6 $const3 primvarT tt 	%line{177} %argrw{"wrrw"}
# PxrManifold2D.osl:179
#     else if (primvarS != "")
	neq		$tmp7 primvarS $const1 	%line{179} %argrw{"wrr"}
	if		$tmp7 17 17 	%argrw{"r"}
# PxrManifold2D.osl:181
#         float val[2] = {0, 0};
	assign		___424_val $const4 	%line{181} %argrw{"wr"}
# PxrManifold2D.osl:182
#         getattribute("primvar", primvarS, val);
	getattribute	$tmp8 $const3 primvarS ___424_val 	%line{182} %argrw{"wrrw"}
# PxrManifold2D.osl:183
#         ss = val[0];
	aref		ss ___424_val $const2 	%line{183} %argrw{"wrr"}
# PxrManifold2D.osl:184
#         tt = val[1];
	aref		tt ___424_val $const5 	%line{184} %argrw{"wrr"}
# PxrManifold2D.osl:202
#         invertS != 0 ? 1.0 - ss : ss,
	neq		$tmp10 invertS $const2 	%line{202} %argrw{"wrr"}
	if		$tmp10 20 21 	%argrw{"r"}
	sub		$tmp9 $const6 ss 	%argrw{"wrr"}
	assign		$tmp9 ss 	%argrw{"wr"}
# PxrManifold2D.osl:187
#     makeStManifold(
	functioncall	$const7 128 	%line{187} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:330
#     int readUvSetSuccessfully = 0;
	assign		___407_readUvSetSuccessfully $const2 	%filename{"/data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h"} %line{330} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:334
#     if (name_uvSet == "" || name_uvSet == "st") {
	eq		$tmp11 name_uvSet $const1 	%line{334} %argrw{"wrr"}
	neq		$tmp12 $tmp11 $const2 	%argrw{"wrr"}
	if		$tmp12 26 29 	%argrw{"r"}
	eq		$tmp13 name_uvSet $const8 	%argrw{"wrr"}
	neq		$tmp14 $tmp13 $const2 	%argrw{"wrr"}
	assign		$tmp12 $tmp14 	%argrw{"wr"}
	if		$tmp12 33 36 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:336
#         readUvSetSuccessfully = 1;
	assign		___407_readUvSetSuccessfully $const5 	%line{336} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:337
#         inUvSet[0] = s;
	aassign		___407_inUvSet $const2 $tmp9 	%line{337} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:338
#         inUvSet[1] = t;
	aassign		___407_inUvSet $const5 tt 	%line{338} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:341
#         inUvSet[0] = 0.0;
	aassign		___407_inUvSet $const2 $const9 	%line{341} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:342
#         inUvSet[1] = 0.0;
	aassign		___407_inUvSet $const5 $const9 	%line{342} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:344
#         readUvSetSuccessfully = getattribute("primvar", name_uvSet, inUvSet);
	getattribute	___407_readUvSetSuccessfully $const3 name_uvSet ___407_inUvSet 	%line{344} %argrw{"wrrw"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:347
#     if (readUvSetSuccessfully) {
	if		___407_readUvSetSuccessfully 41 43 	%line{347} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:348
#         resultManifold.Q = point(inUvSet[0], inUvSet[1], 0.0);
	aref		$tmp15 ___407_inUvSet $const2 	%line{348} %argrw{"wrr"}
	aref		$tmp16 ___407_inUvSet $const5 	%argrw{"wrr"}
	point		result.Q $tmp15 $tmp16 $const9 	%argrw{"wrrr"}
	assign		result.Q result.Q 	%argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:351
#         resultManifold.Q = point(0.0, 0.0, 0.0);
	assign		result.Q $const10 	%line{351} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:352
#         resultManifold.Qradius = 0.0;
	assign		result.Qradius $const9 	%line{352} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:356
#     resultManifold.QN = vector(0.0, 0.0, 1.0);
	assign		result.QN $const11 	%line{356} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:358
#     if (enableTransforms) {
	if		enableTransforms 84 84 	%line{358} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:359
#         if (invertT) {
	if		invertT 55 55 	%line{359} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:361
#             resultManifold.Q[1] = floor(resultManifold.Q[1]) +
	compref		$tmp18 result.Q $const5 	%line{361} %argrw{"wrr"}
	floor		$tmp17 $tmp18 	%argrw{"wr"}
	add		$tmp19 $tmp17 $const6 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:362
#                 1.0 - (resultManifold.Q[1] - floor(resultManifold.Q[1]));
	compref		$tmp20 result.Q $const5 	%line{362} %argrw{"wrr"}
	compref		$tmp22 result.Q $const5 	%argrw{"wrr"}
	floor		$tmp21 $tmp22 	%argrw{"wr"}
	sub		$tmp23 $tmp20 $tmp21 	%argrw{"wrr"}
	sub		$tmp24 $tmp19 $tmp23 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:361
#             resultManifold.Q[1] = floor(resultManifold.Q[1]) +
	compassign	result.Q $const5 $tmp24 	%line{361} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:366
#         resultManifold.Q -= center;
	sub		result.Q result.Q center 	%line{366} %argrw{"wrr"}
	assign		result.Q result.Q 	%argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:368
#         resultManifold.Q = vector(scaleS,scaleT,1.0) * resultManifold.Q
	vector		$tmp25 scaleS scaleT $const6 	%line{368} %argrw{"wrrr"}
	mul		$tmp26 $tmp25 result.Q 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:369
#                             + point(offsetS,offsetT,0.0);
	point		$tmp27 offsetS offsetT $const9 	%line{369} %argrw{"wrrr"}
	add		result.Q $tmp26 $tmp27 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:368
#         resultManifold.Q = vector(scaleS,scaleT,1.0) * resultManifold.Q
	assign		result.Q result.Q 	%line{368} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:371
#         if (angle != 0.0) {
	neq		$tmp28 angle $const9 	%line{371} %argrw{"wrr"}
	if		$tmp28 82 82 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:373
#             point Q = resultManifold.Q;
	assign		___414_Q result.Q 	%line{373} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:374
#             sincos(radians(angle), sinAng, cosAng);
	functioncall	$const12 68 	%line{374} %argrw{"r"}
# /data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include/shaders/stdosl.h:88
# float  radians (float x)  { return x*(M_PI/180.0); }
	div		$tmp30 $const13 $const14 	%filename{"/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include/shaders/stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp29 angle $tmp30 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:374
#             sincos(radians(angle), sinAng, cosAng);
	sincos		$tmp29 ___414_sinAng ___414_cosAng 	%filename{"/data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h"} %line{374} %argrw{"rww"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:375
#             resultManifold.Q = point(cosAng * Q[0] - sinAng * Q[1],
	compref		$tmp31 ___414_Q $const2 	%line{375} %argrw{"wrr"}
	mul		$tmp32 ___414_cosAng $tmp31 	%argrw{"wrr"}
	compref		$tmp33 ___414_Q $const5 	%argrw{"wrr"}
	mul		$tmp34 ___414_sinAng $tmp33 	%argrw{"wrr"}
	sub		$tmp35 $tmp32 $tmp34 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:376
#                                      sinAng * Q[0] + cosAng * Q[1],
	compref		$tmp36 ___414_Q $const2 	%line{376} %argrw{"wrr"}
	mul		$tmp37 ___414_sinAng $tmp36 	%argrw{"wrr"}
	compref		$tmp38 ___414_Q $const5 	%argrw{"wrr"}
	mul		$tmp39 ___414_cosAng $tmp38 	%argrw{"wrr"}
	add		$tmp40 $tmp37 $tmp39 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:377
#                                      Q[2]);
	compref		$tmp41 ___414_Q $const15 	%line{377} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:375
#             resultManifold.Q = point(cosAng * Q[0] - sinAng * Q[1],
	point		result.Q $tmp35 $tmp40 $tmp41 	%line{375} %argrw{"wrrr"}
	assign		result.Q result.Q 	%argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:380
#         resultManifold.Q += center;
	add		result.Q result.Q center 	%line{380} %argrw{"wrr"}
	assign		result.Q result.Q 	%argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:383
#     if (readUvSetSuccessfully) {
	if		___407_readUvSetSuccessfully 125 125 	%line{383} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:385
#         MANIFOLD_CALC_RADIUS(resultManifold);
	functioncall	$const16 125 	%line{385} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:268
#     if (inDisplacement) {
	if		__rfk_inDisplacement 88 125 	%line{268} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:270
#         manifold.Qradius = 0.0;
	assign		result.Qradius $const9 	%line{270} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:271
#     } else if (enableJacobianFilter != 0) {
	neq		$tmp42 enableJacobianFilter $const2 	%line{271} %argrw{"wrr"}
	if		$tmp42 124 125 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:274
#         point Pr = transform("raster", P);
	functioncall	$const18 92 	%line{274} %argrw{"r"}
# /data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include/shaders/stdosl.h:285
# point  transform (string to, point p)  { return transform("common",to,p); }
	transform	___405_Pr $const19 $const17 P 	%filename{"/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include/shaders/stdosl.h"} %line{285} %argrw{"wrrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:275
#         float x = Pr[0];
	compref		___405_x ___405_Pr $const2 	%filename{"/data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h"} %line{275} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:276
#         float y = Pr[1];
	compref		___405_y ___405_Pr $const5 	%line{276} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:278
#         float dxdu = Dx(x);
	Dx		___405_dxdu ___405_x 	%line{278} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:279
#         float dxdv = Dy(x);
	Dy		___405_dxdv ___405_x 	%line{279} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:280
#         float dydu = Dx(y);
	Dx		___405_dydu ___405_y 	%line{280} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:281
#         float dydv = Dy(y);
	Dy		___405_dydv ___405_y 	%line{281} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:283
#         float det = dxdu*dydv - dxdv*dydu;
	mul		$tmp43 ___405_dxdu ___405_dydv 	%line{283} %argrw{"wrr"}
	mul		$tmp44 ___405_dxdv ___405_dydu 	%argrw{"wrr"}
	sub		___405_det $tmp43 $tmp44 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:284
#         float detinv = 1.0;
	assign		___405_detinv $const6 	%line{284} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:285
#         if (det != 0.0) detinv = 1.0/det;
	neq		$tmp45 ___405_det $const9 	%line{285} %argrw{"wrr"}
	if		$tmp45 105 105 	%argrw{"r"}
	div		___405_detinv $const6 ___405_det 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:286
#         float dudx = dydv*detinv;
	mul		___405_dudx ___405_dydv ___405_detinv 	%line{286} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:287
#         float dudy = -dxdv*detinv;
	neg		$tmp46 ___405_dxdv 	%line{287} %argrw{"wr"}
	mul		___405_dudy $tmp46 ___405_detinv 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:288
#         float dvdx = -dydu*detinv;
	neg		$tmp47 ___405_dydu 	%line{288} %argrw{"wr"}
	mul		___405_dvdx $tmp47 ___405_detinv 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:289
#         float dvdy = dxdu*detinv;
	mul		___405_dvdy ___405_dxdu ___405_detinv 	%line{289} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:291
#         vector dQdu = Dx(manifold.Q);
	Dx		___405_dQdu result.Q 	%line{291} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:292
#         vector dQdv = Dy(manifold.Q);
	Dy		___405_dQdv result.Q 	%line{292} %argrw{"wr"} %argderivs{1}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:294
#         vector dQdx = dQdu*dudx + dQdv*dvdx;
	mul		$tmp48 ___405_dQdu ___405_dudx 	%line{294} %argrw{"wrr"}
	mul		$tmp49 ___405_dQdv ___405_dvdx 	%argrw{"wrr"}
	add		___405_dQdx $tmp48 $tmp49 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:295
#         vector dQdy = dQdu*dudy + dQdv*dvdy;
	mul		$tmp50 ___405_dQdu ___405_dudy 	%line{295} %argrw{"wrr"}
	mul		$tmp51 ___405_dQdv ___405_dvdy 	%argrw{"wrr"}
	add		___405_dQdy $tmp50 $tmp51 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:296
#         manifold.Qradius = jacobianRadiusMult * sqrt(length(cross(dQdx, dQdy)));
	cross		$tmp54 ___405_dQdx ___405_dQdy 	%line{296} %argrw{"wrr"}
	length		$tmp53 $tmp54 	%argrw{"wr"}
	sqrt		$tmp52 $tmp53 	%argrw{"wr"}
	mul		result.Qradius jacobianRadiusMult $tmp52 	%argrw{"wrr"}
	assign		result.Qradius result.Qradius 	%argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:299
#         manifold.Qradius = 0.0;
	assign		result.Qradius $const9 	%line{299} %argrw{"wr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:388
#     resultS = resultManifold.Q[0];
	compref		resultS result.Q $const2 	%line{388} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:389
#     resultT = resultManifold.Q[1];
	compref		resultT result.Q $const5 	%line{389} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Manifold.h:390
#     resultRadius = resultManifold.Qradius;
	assign		resultRadius result.Qradius 	%line{390} %argrw{"wr"}
# PxrManifold2D.osl:211
#     if (isconnected(warp))
	isconnected	$tmp55 warp 	%filename{"PxrManifold2D.osl"} %line{211} %argrw{"wr"}
	if		$tmp55 137 137 	%argrw{"r"}
# PxrManifold2D.osl:214
#         result.Q += (2.0 * warp - 1.0) * warpAmount;
	mul		$tmp56 $const20 warp 	%line{214} %argrw{"wrr"}
	sub		$tmp57 $tmp56 $const6 	%argrw{"wrr"}
	mul		$tmp58 $tmp57 warpAmount 	%argrw{"wrr"}
	add		result.Q result.Q $tmp58 	%argrw{"wrr"}
	assign		result.Q result.Q 	%argrw{"wr"}
# PxrManifold2D.osl:215
#         resultS = result.Q[0];
	compref		resultS result.Q $const2 	%line{215} %argrw{"wrr"}
# PxrManifold2D.osl:216
#         resultT = result.Q[1];
	compref		resultT result.Q $const5 	%line{216} %argrw{"wrr"}
	end
