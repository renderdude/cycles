OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -DOSX -I/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include -I/data/build/ratbuild/rmanshare/RIS/include -I/data/build/ratbuild/rmanshare/RIS/include/common -I/data/build/ratbuild/rmanshare/RIS/pattern/osl -I/data/build/ratbuild/rmanshare/RIS/include/osl -o /data/build/ratbuild/rmanshare/_built/osxMojave_x86-64_clang10_external_release/osl/PxrToFloat3.osl/obj/PxrToFloat3.oso
shader PxrToFloat3	%meta{int,rfm_nodeid,1053436} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/utility"} %meta{string,rfh_classification,"Pattern/Utility"} %meta{string,help,"Produces a triple output from a single float input. The single float **input** is copied to each channel. If float **inputR**, **inputG**, **inputB** are connected, then those will be convert to a color instead "} 
param	float	input	0		%meta{string,widget,"default"} %meta{string,help,"The float to convert to a triple."} %meta{string,label,"Input"} %meta{int,slider,1} %meta{float,slidermax,1} %meta{float,slidermin,0}  %read{0,22} %write{2147483647,-1}
param	float	inputR	0		%meta{string,widget,"default"} %meta{string,help,"The float to place in the R component of resultRGB"} %meta{string,label,"Input R"} %meta{int,slider,1} %meta{float,slidermax,1} %meta{float,slidermin,0}  %read{1,21} %write{2147483647,-1}
param	float	inputG	0		%meta{string,widget,"default"} %meta{string,help,"The float to place in the G component of resultRGB"} %meta{string,label,"Input G"} %meta{int,slider,1} %meta{float,slidermax,1} %meta{float,slidermin,0}  %read{2,21} %write{2147483647,-1}
param	float	inputB	0		%meta{string,widget,"default"} %meta{string,help,"The float to place in the B component of resultRGB"} %meta{string,label,"Input B"} %meta{int,slider,1} %meta{float,slidermax,1} %meta{float,slidermin,0}  %read{3,21} %write{2147483647,-1}
oparam	color	resultRGB	0 0 0		%meta{string,help,"resultRGB (color)"}  %read{2147483647,-1} %write{6,22}
local	int	inputConnected	%read{5,5} %write{0,0}
local	int	inputRConnected	%read{7,7} %write{1,1}
local	int	inputGConnected	%read{9,9} %write{2,2}
local	int	inputBConnected	%read{13,13} %write{3,3}
local	float	inputDefault	%read{17,17} %write{4,4}
const	int	$const1	0		%read{4,18} %write{2147483647,-1}
temp	int	$tmp1	%read{8,11} %write{7,10}
temp	int	$tmp2	%read{10,10} %write{9,9}
temp	int	$tmp3	%read{12,15} %write{11,14}
temp	int	$tmp4	%read{14,14} %write{13,13}
temp	int	$tmp5	%read{16,20} %write{15,19}
temp	int	$tmp6	%read{18,18} %write{17,17}
temp	int	$tmp7	%read{19,19} %write{18,18}
code ___main___
# PxrToFloat3.osl:90
#     int inputConnected = isconnected(input);
	isconnected	inputConnected input 	%filename{"PxrToFloat3.osl"} %line{90} %argrw{"wr"}
# PxrToFloat3.osl:91
#     int inputRConnected = isconnected(inputR);
	isconnected	inputRConnected inputR 	%line{91} %argrw{"wr"}
# PxrToFloat3.osl:92
#     int inputGConnected = isconnected(inputG);
	isconnected	inputGConnected inputG 	%line{92} %argrw{"wr"}
# PxrToFloat3.osl:93
#     int inputBConnected = isconnected(inputB);
	isconnected	inputBConnected inputB 	%line{93} %argrw{"wr"}
# PxrToFloat3.osl:94
#     float inputDefault = 0;
	assign		inputDefault $const1 	%line{94} %argrw{"wr"}
# PxrToFloat3.osl:96
#     if (inputConnected)
	if		inputConnected 7 23 	%line{96} %argrw{"r"}
# PxrToFloat3.osl:98
#         resultRGB = color(input);
	assign		resultRGB input 	%line{98} %argrw{"wr"}
# PxrToFloat3.osl:100
#     else if (inputRConnected || inputGConnected || inputBConnected || (input == inputDefault))
	neq		$tmp1 inputRConnected $const1 	%line{100} %argrw{"wrr"}
	if		$tmp1 9 11 	%argrw{"r"}
	neq		$tmp2 inputGConnected $const1 	%argrw{"wrr"}
	assign		$tmp1 $tmp2 	%argrw{"wr"}
	neq		$tmp3 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp3 13 15 	%argrw{"r"}
	neq		$tmp4 inputBConnected $const1 	%argrw{"wrr"}
	assign		$tmp3 $tmp4 	%argrw{"wr"}
	neq		$tmp5 $tmp3 $const1 	%argrw{"wrr"}
	if		$tmp5 17 20 	%argrw{"r"}
	eq		$tmp6 input inputDefault 	%argrw{"wrr"}
	neq		$tmp7 $tmp6 $const1 	%argrw{"wrr"}
	assign		$tmp5 $tmp7 	%argrw{"wr"}
	if		$tmp5 22 23 	%argrw{"r"}
# PxrToFloat3.osl:102
#         resultRGB = color(inputR, inputG, inputB);
	color		resultRGB inputR inputG inputB 	%line{102} %argrw{"wrrr"}
# PxrToFloat3.osl:106
#         resultRGB = color(input);
	assign		resultRGB input 	%line{106} %argrw{"wr"}
	end
