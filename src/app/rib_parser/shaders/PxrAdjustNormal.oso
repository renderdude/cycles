OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -DOSX -I/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include -I/data/build/ratbuild/rmanshare/RIS/include -I/data/build/ratbuild/rmanshare/RIS/include/common -I/data/build/ratbuild/rmanshare/RIS/pattern/osl -I/data/build/ratbuild/rmanshare/RIS/include/osl -o /data/build/ratbuild/rmanshare/_built/osxMojave_x86-64_clang10_external_release/osl/PxrAdjustNormal.osl/obj/PxrAdjustNormal.oso
shader PxrAdjustNormal	%meta{int,rfm_nodeid,1200406} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/bump"} %meta{string,rfh_classification,"Pattern/Bump"} %meta{string,help,"Utility to adjust the normals."} 
param	normal	inputNormal	0 0 0		%meta{string,widget,"default"} %meta{string,help,"Connect your normal pattern to adjust.<br><br>inputNormal (normal)"} %meta{string,label,"Input Normal"} %meta{string,readOnly,"True"}  %read{2,2} %write{2147483647,-1}
param	float	adjustAmount	1		%meta{string,widget,"default"} %meta{string,help,"Amount to adjust the normals.<br><br>adjustAmount (float)"} %meta{string,label,"Adjust Amount"} %meta{float,max,1} %meta{float,min,0}  %read{4,13} %write{2147483647,-1}
param	float	surfaceNormalMix	0		%meta{string,widget,"default"} %meta{string,help,"The amount to mix the resulting normals with the surface normals.<br><br>surfaceNormalMix (float)"} %meta{string,label,"Surface Normal Mix"} %meta{float,max,1} %meta{float,min,0} %meta{int,slider,1} %meta{float,slidermax,1} %meta{float,slidermin,0}  %read{19,21} %write{2147483647,-1}
oparam	normal	resultN	0 0 0		%meta{string,help,"resultN (normal)"}  %read{2147483647,-1} %write{23,23}
global	vector	I	%read{0,0} %write{2147483647,-1}
global	normal	N	%read{21,21} %write{2147483647,-1}
global	normal	Ng	%read{7,7} %write{2147483647,-1}
local	float	___367_VdotN	%read{11,14} %write{10,10}
local	vector	Vn	%read{7,15} %write{1,1}
local	normal	bumpN	%read{10,23} %write{2,22}
temp	vector	$tmp1	%read{1,1} %write{0,0}
const	string	$const1	"RixAdjustNormal"		%read{3,3} %write{2147483647,-1}
const	int	$const2	0		%read{4,19} %write{2147483647,-1}
temp	int	$tmp2	%read{5,5} %write{4,4}
temp	float	$tmp3	%read{8,8} %write{7,7}
temp	int	$tmp4	%read{9,9} %write{8,8}
temp	int	$tmp5	%read{12,12} %write{11,11}
const	float	$const3	1.00999999		%read{13,13} %write{2147483647,-1}
temp	float	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{15,15} %write{14,14}
temp	vector	$tmp8	%read{16,16} %write{15,15}
const	string	$const4	"RixBlendWithNormal"		%read{18,18} %write{2147483647,-1}
temp	int	$tmp9	%read{20,20} %write{19,19}
temp	normal	$tmp10	%read{22,22} %write{21,21}
code ___main___
# PxrAdjustNormal.osl:81
#     vector Vn = normalize(-I);
	neg		$tmp1 I 	%filename{"PxrAdjustNormal.osl"} %line{81} %argrw{"wr"}
	normalize	Vn $tmp1 	%argrw{"wr"}
# PxrAdjustNormal.osl:82
#     normal bumpN = inputNormal;
	assign		bumpN inputNormal 	%line{82} %argrw{"wr"}
# PxrAdjustNormal.osl:83
#     RixAdjustNormal(adjustAmount, Vn, Ng, bumpN);
	functioncall	$const1 18 	%line{83} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:198
#     if (amount == 0) return;
	eq		$tmp2 adjustAmount $const2 	%filename{"/data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{198} %argrw{"wrr"}
	if		$tmp2 7 7 	%argrw{"r"}
	return
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:200
#     if (dot(Vn, Ngn) >= 0)
	dot		$tmp3 Vn Ng 	%line{200} %argrw{"wrr"}
	ge		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	if		$tmp4 18 18 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:202
#         float VdotN = dot(Vn, Nn);
	dot		___367_VdotN Vn bumpN 	%line{202} %argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:203
#         if (VdotN <= 0)
	le		$tmp5 ___367_VdotN $const2 	%line{203} %argrw{"wrr"}
	if		$tmp5 18 18 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:207
#             Nn -= amount * 1.01 * VdotN * Vn;
	mul		$tmp6 adjustAmount $const3 	%line{207} %argrw{"wrr"}
	mul		$tmp7 $tmp6 ___367_VdotN 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 Vn 	%argrw{"wrr"}
	sub		bumpN bumpN $tmp8 	%argrw{"wrr"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:208
#             Nn = normalize(Nn);
	normalize	bumpN bumpN 	%line{208} %argrw{"wr"}
# PxrAdjustNormal.osl:84
#     RixBlendWithNormal(surfaceNormalMix, N, bumpN);
	functioncall	$const4 23 	%filename{"PxrAdjustNormal.osl"} %line{84} %argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:215
#     if (surfaceNormalMix > 0)
	gt		$tmp9 surfaceNormalMix $const2 	%filename{"/data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h"} %line{215} %argrw{"wrr"}
	if		$tmp9 23 23 	%argrw{"r"}
# /data/build/ratbuild/rmanshare/RIS/include/osl/Bump.h:216
#         bumpN = normalize(mix(bumpN, Nn, surfaceNormalMix));
	mix		$tmp10 bumpN N surfaceNormalMix 	%line{216} %argrw{"wrrr"}
	normalize	bumpN $tmp10 	%argrw{"wr"}
# PxrAdjustNormal.osl:85
#     resultN = normalize(bumpN);
	normalize	resultN bumpN 	%filename{"PxrAdjustNormal.osl"} %line{85} %argrw{"wr"}
	end
