OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -DOSX -I/data/build/ratbuild/rman/_built/osxMojave_x86-64_clang10_external_release/include -I/data/build/ratbuild/rmanshare/RIS/include -I/data/build/ratbuild/rmanshare/RIS/include/common -I/data/build/ratbuild/rmanshare/RIS/pattern/osl -I/data/build/ratbuild/rmanshare/RIS/include/osl -o /data/build/ratbuild/rmanshare/_built/osxMojave_x86-64_clang10_external_release/osl/PxrCross.osl/obj/PxrCross.oso
shader PxrCross	%meta{int,rfm_nodeid,1053391} %meta{string,rfm_classification,"rendernode/RenderMan/pattern/geometry"} %meta{string,rfh_classification,"Pattern/Geometry"} %meta{string,help,"Computes the cross product of two vectors and optionally normalizes the resulting vector. "} 
param	vector	vector1	0 0 0		%meta{string,widget,"default"} %meta{string,help,"The first vector in the cross product calculation."} %meta{string,label,"Vector 1"}  %read{0,0} %write{2147483647,-1}
param	vector	vector2	0 0 0		%meta{string,widget,"default"} %meta{string,help,"The second vector in the cross product calculation."} %meta{string,label,"Vector 2"}  %read{0,0} %write{2147483647,-1}
param	int	normalizeResult	1		%meta{string,widget,"checkBox"} %meta{string,help,"When enabled (set to 1) the cross product result will be a normalized vector."} %meta{int,connectable,0} %meta{string,label,"Normalize Result"}  %read{1,1} %write{2147483647,-1}
oparam	vector	resultXYZ	0 0 0		%meta{string,help,"resultXYZ (vector)"}  %read{2,5} %write{0,2}
oparam	float	resultX	0		%meta{string,help,"resultX (float)"}  %read{2147483647,-1} %write{3,3}
oparam	float	resultY	0		%meta{string,help,"resultY (float)"}  %read{2147483647,-1} %write{4,4}
oparam	float	resultZ	0		%meta{string,help,"resultZ (float)"}  %read{2147483647,-1} %write{5,5}
const	int	$const1	0		%read{3,3} %write{2147483647,-1}
const	int	$const2	1		%read{4,4} %write{2147483647,-1}
const	int	$const3	2		%read{5,5} %write{2147483647,-1}
code ___main___
# PxrCross.osl:85
#     resultXYZ = cross(vector1, vector2);
	cross		resultXYZ vector1 vector2 	%filename{"PxrCross.osl"} %line{85} %argrw{"wrr"}
# PxrCross.osl:86
#     if (normalizeResult) resultXYZ = normalize(resultXYZ);
	if		normalizeResult 3 3 	%line{86} %argrw{"r"}
	normalize	resultXYZ resultXYZ 	%argrw{"wr"}
# PxrCross.osl:88
#     resultX = resultXYZ[0];
	compref		resultX resultXYZ $const1 	%line{88} %argrw{"wrr"}
# PxrCross.osl:89
#     resultY = resultXYZ[1];
	compref		resultY resultXYZ $const2 	%line{89} %argrw{"wrr"}
# PxrCross.osl:90
#     resultZ = resultXYZ[2];
	compref		resultZ resultXYZ $const3 	%line{90} %argrw{"wrr"}
	end
